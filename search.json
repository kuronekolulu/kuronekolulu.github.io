[{"title":"Selenium WebDriver 各浏览器驱动下载地址","date":"2022-04-06T01:29:03.430Z","url":"/2022/04/06/Selenium%20WebDriver%20%E5%90%84%E6%B5%8F%E8%A7%88%E5%99%A8%E9%A9%B1%E5%8A%A8%E4%B8%8B%E8%BD%BD%E5%9C%B0%E5%9D%80/","tags":[["selenium","/tags/selenium/"]],"categories":[["UI自动化","/categories/UI%E8%87%AA%E5%8A%A8%E5%8C%96/"]],"content":"Selenium WebDriver 各浏览器驱动下载地址Chrome点击下载chrome的webdriver：  或者：  不同的Chrome的版本对应的chromedriver.exe 版本也不一样，下载时不要搞错了。如果是最新的Chrome, 下载最新的chromedriver.exe 就可以了。 把chromedriver的路径也加到环境变量里。 支持版本（具体查看notes.txt） FirefoxFirefox驱动下载地址为： 根据自己的操作系统下载对应的驱动即可，使用的话，需要把驱动的路径和火狐浏览器的路径加入到环境变量里面才可以 历史版本Firefox： IEIE浏览器驱动下载地址为： 根据自己selenium版本下载对应版本的驱动即可，python的话，下载里面的IEDriverServerxxx.zip即可，这个是区分32和64位系统的，根据自己的系统下载即可，需要注意的是，如果要打开IE浏览器的话，需要在浏览器的Internet选项中的安全页里有4个安全选项，Internet、本地Internet、受信任的站点、受限制的站点，这4个里面都有一个启用保护模式，都需要勾选上才可以，还得把驱动的路径加入到环境变量中。"},{"title":"GitHub+Hexo 搭建个人网站详细教程","date":"2022-03-14T09:30:15.000Z","url":"/2022/03/14/GitHub-Hexo-%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99%E8%AF%A6%E7%BB%86%E6%95%99%E7%A8%8B/","tags":[["github.io","/tags/github-io/"]],"categories":[["web","/categories/web/"]],"content":"什么是Hexo ? Hexo是一款基于Node.js的静态博客框架，依赖少易于安装使用，可以方便的生成静态网页托管在GitHub和Heroku上，是搭建博客的首选框架。 这是我的个人博客效果: Mark个人博客 下面正式从零开始搭建年轻人的第一个网站。 1.安装Git首先，你先要有一个GitHub账户，注册完登录后，在GitHub.com中看到一个New repository，新建仓库.创建一个和你用户名相同的仓库，后面加.github.io，只有这样，将来要部署到GitHub page的时候，才会被识别。 然后进行Git安装： windows：到git官网上下载,Download git,下载后会有一个Git Bash的命令行工具，以后就用这个工具来使用git。安装好后，用git –version 来查看一下版本。 安装成功后，将你的Git与GitHub帐号绑定，鼠标右击打开Git Bash或者在菜单里搜索Git Bash，设置user.name和user.email配置信息： 生成ssh密钥文件： 然后直接三个回车即可，默认不需要设置密码然后找到生成的.ssh的文件夹中的id_rsa.pub密钥，将内容全部复制（C:\\Users\\mark\\.ssh\\id_rsa.pub） 打开GitHub_Settings_keys页面，新建new SSH Key Title为标题，任意填即可，将刚刚复制的id_rsa.pub内容粘贴进去，最后点击Add SSH key。在Git Bash中检测GitHub公钥设置是否成功，输入 ssh &#x67;&#x69;&#x74;&#64;&#x67;&#105;&#x74;&#x68;&#x75;&#98;&#x2e;&#99;&#x6f;&#x6d; 2. 安装nodejs安装后，检测Node.js是否安装成功，在命令行中输入 node -v 检测npm是否安装成功，在命令行中输入npm -v 3. 安装hexo前面git和nodejs安装好后，就可以安装hexo了，你可以先创建一个文件夹blog，然后cd到这个文件夹下（或者在这个文件夹下直接右键git bash打开）。 输入命令 依旧用hexo -v查看一下版本，接下来初始化一下hexo 指定文件夹目录下有： node_modules: 依赖包public：存放生成的页面scaffolds：生成文章的一些模板source：用来存放你的文章themes：主题** _config.yml: 博客的配置文件**这个myblog可以自己取什么名字都行，然后 这个myblog可以自己取什么名字都行，然后 完成后，打开浏览器输入地址： localhost:4000 就可以看到你生成的博客了。 现在来介绍常用的Hexo 命令 命令简写 刚刚的三个命令依次是新建一篇博客文章、生成网页、在本地预览的操作。 4. 将hexo部署到GitHub这一步，我们就可以将hexo和GitHub关联起来，也就是将hexo生成的文章部署到GitHub上，打开站点配置文件 _config.yml，翻到最后，修改为YourgithubName就是你的GitHub账户 YourgithubName就是你的GitHub账户 这个时候需要先安装deploy-git ，也就是部署的命令,这样你才能用命令部署到GitHub。 然后 其中 hexo clean清除了你之前生成的东西，也可以不加。hexo generate 顾名思义，生成静态文章，可以用 hexo g缩写hexo deploy 部署文章，可以用hexo d缩写 注意deploy时可能要你输入username和password。 得到下图就说明部署成功了，过一会儿就可以在 这个网站看到你的博客了！！ 5.更换主题如果你不喜欢Hexo默认的主题，可以更换不同的主题，主题传送门：Themes 将下载的主题放到blog目录的themes主题下的next文件夹中。打开站点的_config.yml配置文件，然后再在刚才说的配置文件中把theme换成那个主题文件夹的名字，它就会自动在theme文件夹中搜索你配置的主题。 而后进入hueman这个文件夹，可以看到里面也有一个配置文件_config.xml，貌似它默认是_config.xml.example，把它复制一份，再重命名为_config.xml就可以了。这个配置文件是修改你整个主题的配置文件。 6. 设置个人域名​ 域名配置最常见有2种方式，CNAME和A记录，CNAME填写域名，A记录填写IP，由于不带www方式只能采用A记录，所以必须先ping一下你的用户名.github.io的IP，然后到你的域名DNS设置页，将A记录指向你ping出来的IP，将CNAME指向你的用户名.github.io，这样可以保证无论是否添加www都可以访问.192.30.252.153 和 192.30.252.154 是GitHub的服务器地址。 第二步，登录GitHub，进入之前创建的仓库，点击settings，设置Custom domain，输入你的域名。 然后在你的博客文件source中创建一个名为CNAME文件，不要后缀。写上你的域名。（如果带有www，那么以后访问的时候必须带有www完整的域名才可以访问，但如果不带有www，以后访问的时候带不带www都可以访问。所以建议，不要带有www。） 完成这三步，进入blog目录中，按住shift键右击打开控制台窗口，依次输入： 这时候打开浏览器在地址栏输入你的个性化域名将会直接进入你自己搭建的网站。 7.发布文章我们开始正式发布上线博客文章，在命令行中输入： ​ 我们会发现在blog根目录下的source文件夹中的_post文件夹中多了一个 博客名字.md 文件，使用Markdown编辑器打开，就可以开始你的个人博客之旅了，Markdown常用的样式也就十来种，完全能够满足一般博文的样式要求，推荐使用Markdown编辑器Typora。 一般完整格式如下： ​ 通过带有预览样式的Markdown编辑器实时预览书写的博文样式，也可以通过命令 hexo s –debug 在本地浏览器的localhost:4000 预览博文效果。写好博文并且样式无误后，通过hexo g、hexo d 生成、部署网页。随后可以在浏览器中输入域名浏览。 参考文档：  "},{"title":"Hello World","date":"2022-03-14T07:57:17.694Z","url":"/2022/03/14/hello-world/","categories":[["undefined",""]],"content":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post More info: Writing Run server More info: Server Generate static files More info: Generating Deploy to remote sites More info: Deployment"}]